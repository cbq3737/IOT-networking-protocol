-소켓의 옵션과 입출력 버퍼의 크기
getsockopt:(int socket(소켓생성 시 반환값),int level(프로토콜 레벨,ex)SOL_SOCKET),int optname(확인할 옵션이름),void *optval(버퍼 주소값),socklen_t *optlen(버퍼크기를 담고잇는 변수의 주소값))
setsockopt:

sockserveropt.c,sockclientopt.c : socketserver,socketclient 파일을 서버를 끊고 연결하고를 반복실행시 bind error가 뜰 수 있는데 해결책으로 서버쪽에서 수정을 해보자
ex)이 코드를 넣으면 해결됨.
int opt=1;
if(setsockopt(server_fd,SOL_SOCKET,SO_REUSEADDR|SO_REUSEPORT,&opt,sizeof(opt)))  :소켓명칭,프로토콜 레벨 이름,ADDR,PORT 다 reuse하겠다.opt=1인이유는 turn on (켜다)세팅을 하겠다라는 의미,
    { 
       perror("setsocketopt");
       exit(EXIT_FALIURE)
    }
파일,소켓 디스크립터:소켓 서술자,그 소켓의 명칭이라는 의미
***server의 accpet부분을 보면 client의 대한 정보를 누가 채워주는가에대한 것을 알아야된다. 여기는 client라는 구조체만 있을뿐이지 누가 들어오는지 어떻게 알지,누가 그 client의 정보를 채워주는지?접속을할때 내부적으로 클라이언트 프로그램에서 connect시킬때 소켓의 정보를 구조체 담아놓는데  connect를 하면서 server에 접속할때 그 담아놓은 client 정보가 넘어감.
vmware의 우분투로 하면 안되고 라즈베리파이로 연결해서 sockserveropt,sockclientopt를 만들고 클라이언트의 ip만 연결하려는 라즈베리파이의 ip를 입력하면 다른 컴퓨터라도 접속이 가능하다.
192.168.11.130 -> 32비트의 ip address 사용, 2^32개의  ip address 표현 가능, 이 표현도 부족해져서 ipv6로 사용한다면 128비트->엄청난 증가
32비트 ip주소 공간은 1.public ip address(유니크하다는게 특징 즉 고유 ip번호임) 2.private ip address로 나뉜다.
ip를 보고 class A,B,C를 표를 보고 구분을 할줄 알아야하며 그중에 private ip에 포함되는지도 확인가능해야한다. private ip는 돈을 내지않는다.
포트번호:포트번호도 각각 1000번안 까지는 정해져잇는 포트들이 있다. well known port(0~1023: 잘알려진 포트),registerd port(1024~49141번:등록된 포트),포트가 65535까지인데 포트번호가 16비트이므로 최대표현 비트를 65535까지만 가능하기때문에
socketoption,setsocketoption,ipsocketoption
라즈베리파이에서 UDP로 똑같이 만들면 다수의 컴퓨터에서 server에 접속가능
wireshark:와이퍼샤크는 오픈 소스 패킷 분석 프로그램으로 "pcap"을 이용하여 패킷을 잡아내는 것이 주요 기능이다.내 컴퓨터에서 데이터가 잘 나가고 들어오는지 정도만 확인
윈도우에서 wireshark가 안되서 ubuntu에서 wireshark 설치->sudo wireshark로 실행->any실행(모든걸 다 잡겠다라는 의미)->server,client를 실행시키면 wireshark에서 패킷이 왔다갔다하는 모습을 포착
ftp서버 설치->ping ftp로 wireshark의 안테나가 잘 작동하는지 보고 any들어가서, ftp localhost를 실행한후 id와 password입력후 any의 ftp골라서 follow->tcp stream을 확인하면 우리가 입력했던 정보까지 모두 캡처됨.
wireshar의 edit->preference->resolve network ip address 체크해주면 ip address의 ip를 사람이 이해할수있도록 바꿔준다.(name resolution:ip이름을 이해할수있는 이름으로 바꿔주는것)
